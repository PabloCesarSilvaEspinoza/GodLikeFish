<script src="../../assets/libs/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap tether Core JavaScript -->
<script src="../../assets/libs/popper.js/dist/umd/popper.min.js"></script>
<script src="../../assets/libs/bootstrap/dist/js/bootstrap.min.js"></script>
<!-- apps -->
<script src="../../dist/js/app.min.js"></script>
{{#if administrador}}
<script src="../../dist/js/app.init.horizontal-fullwidth.js"></script>
{{else}}
<script src="../../dist/js/app.init.horizontal.js"></script>
{{/if}}
<script src="../../dist/js/app-style-switcher.horizontal.js"></script>
<!-- slimscrollbar scrollbar JavaScript -->
<script src="../../assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js"></script>
<script src="../../assets/extra-libs/sparkline/sparkline.js"></script>
<!--Wave Effects -->
<script src="../../dist/js/waves.js"></script>
<!--Menu sidebar -->
<script src="../../dist/js/sidebarmenu.js"></script>
<!--Custom JavaScript -->
<script src="../../dist/js/custom.min.js"></script>
<!--This page JavaScript -->
<!--chartis chart-->
<script src="../../assets/libs/chartist/dist/chartist.min.js"></script>
<script src="../../assets/libs/chartist-plugin-tooltips/dist/chartist-plugin-tooltip.min.js"></script>
<!--c3 charts -->
<script src="../../assets/extra-libs/c3/d3.min.js"></script>
<script src="../../assets/extra-libs/c3/c3.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!--chartjs -->
<script src="../../assets/libs/chart.js/dist/Chart.min.js"></script>
<script src="../../dist/js/pages/dashboards/dashboard1.js"></script>
<!--estrellas -->
<script src="../../dist/js/custom.min.js"></script>
<script src="../../assets/libs/raty-js/lib/jquery.raty.js"></script>
<script src="../../assets/extra-libs/raty/rating-init.js"></script>

{{#if graficasEstudiante}}
{{#resumenEstudiante}}
<script>
    var ctx = document.getElementById('GraficaMuestra8');
    var GraficaMuestra8 = new Chart(ctx, {
        responsive: true,
        type: 'bar',
        data : {
                labels:['Total','Terminados','Disponibles', ''],
                datasets: [{
                label: 'Cursos',
                data: [{{cursosTotales}}, {{cursosTerminados}}, {{cursosDisponibles}}, 0],
                backgroundColor: [
                'rgba(255, 99, 132)',
                'rgba(255, 159, 64)',
                'rgba(255, 205, 86)',
                'rgb(75, 192, 192)'
                ],
                borderColor: [
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)',
                'rgba(255, 205, 86)',
                'rgb(75, 192, 192)'
                ]
        
            }]
            },
            options: {
            }
        });
</script>
{{/resumenEstudiante}}
{{/if}}

{{#if graficasAdministrador}}
<script>
    var ctx = document.getElementById('GraficaMuestra');
    var GraficaMuestra = new Chart(ctx, {
        responsive: true,
        type: 'doughnut',
        data: {
            labels: [
            {{#each valores}}

            '{{NombreArea}}',

            {{/each}}
            ],

    datasets: [{
        label: 'Usuarios Activos',
        data: [
            {{#each valores}}

                {{ totalCursos }},
            {{/each}}
    ],
        backgroundColor: [
            'rgba(75, 192, 192)',
            'rgb(255, 205, 86)',
            'rgba(255, 99, 132)',
            'rgba(153, 102, 255, 1)'
        ],
            hoverOffset: 1
    }]
    },
    options: {
    }
    });
</script>
<script>
    var ctx = document.getElementById('GraficaMuestra1');
    var GraficaMuestra1 = new Chart(ctx, {
        responsive: true,
        type: 'polarArea',

        data: {
            labels: [
                {{#each valoresina}}

            '{{NombreArea}}',

                {{/each}}
            ],

            datasets: [{
                label: 'Cursos Inactivos',
                data: [
                    {{#each valoresina}}

                        {{ totalCursos }},

                    {{/each}}
            ],
                backgroundColor: [
                    'rgba(75, 192, 192)',
                    'rgb(255, 205, 86)',
                    'rgba(255, 99, 132)',
                    'rgba(153, 102, 255, 1)'
                ],
                borderColor: 'rgb(255, 99, 132)',
                        hoverOffset: 1
            }]
    },
    options: {
    }
    });
</script>
{{/if}}
{{#if graficasAdministrador}}
<script>
    var ctx = document.getElementById('GraficaMuestra2');
    var GraficaMuestra2 = new Chart(ctx, {
        responsive: true,
        type: 'radar',

        data: {
            labels: [
                {{#each valores}}

            '{{NombreArea}}',

                {{/each}}
            ],

            datasets: [{
                label: 'Usuarios Inactivos',
                data: [
                    {{#each valoresUinact}}

                        {{ totalUsuariosInactivos }},

                    {{/each}}
                ],
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgb(255, 99, 132)',
                pointBackgroundColor: 'rgb(255, 99, 132)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(255, 99, 132)'
                }, {
                label: 'Usuarios Activos',
                data: [
                    {{#each valoresUact}}

                        {{ totalUsuariosActivos }},

                    {{/each}}
                ],
                fill: true,
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgb(54, 162, 235)',
                pointBackgroundColor: 'rgb(54, 162, 235)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(54, 162, 235)'
            }, {
                label: 'Usuarios en Curso',
                data: [
                    {{#each valoresUcurso}}

                        {{ totalUsuarios }},

                    {{/each}}
                ],
                fill: true,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgb(153, 102, 255)',
                pointBackgroundColor: 'rgb(153, 102, 255)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(153, 102, 255)'
            }, {
                label: 'Usuarios con Reconocimiento',
                data: [
                    {{#each valoresUrecono}}

                        {{ totalUsuarios }},

                    {{/each}}
                ],
                fill: true,
                backgroundColor: 'rgba(255, 205, 86, 0.2)',
                borderColor: 'rgb(255, 205, 86)',
                pointBackgroundColor: 'rgb(255, 205, 86)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(255, 205, 86)'
            }]
    },
    options: {
    }
    });
</script>
{{/if}}
{{#if graficasAdministrador}}
<script>
    var ctx = document.getElementById('GraficaMuestra3');
    var GraficaMuestra3 = new Chart(ctx, {
        responsive: true,
        type: 'doughnut',

        data: {
            labels: [
                'Problemas',
                'Examenes',
                'Avisos',
                'Recursos'
            ],

            datasets: [{
                label: 'Datos Cursos',
                data: [
                        {{#if totalProblemasCurso}}
                            {{#totalProblemasCurso}}
                                {{ totalProblemas }},
                            {{/totalProblemasCurso}}
                        {{else}}
                            0,
                        {{/if}}
                        {{#if totalExamenesCurso}}
                            {{#totalExamenesCurso}}
                                {{ totalExamenes }},
                            {{/totalExamenesCurso}}
                        {{else}}
                            0,
                        {{/if}}
                        {{#if totalAvisosCurso}}
                            {{#totalAvisosCurso}}
                                {{ totalAvisos }},
                            {{/totalAvisosCurso}}
                        {{else}}
                            0,
                        {{/if}}
                        {{#if totalRecursosCurso}}
                            {{#totalRecursosCurso}}
                                {{ totalRecursos }},
                            {{/totalRecursosCurso}}
                        {{else}}
                            0,
                        {{/if}}
            ],
                backgroundColor: [
                    'rgba(255, 159, 64, 0.9)',
                    'rgb(255, 205, 86)',
                    'rgba(255, 99, 132)',
                    'rgba(54, 162, 235)'
                ],
                pointBackgroundColor: 'rgb(75, 192, 192)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(75, 192, 192)'
            }]
    },
    options: {
    }
    });
</script>
{{/if}}
{{#if graficasAdministrador}}
<script>
    var ctx = document.getElementById('GraficaMuestra5');
    var GraficaMuestra5 = new Chart(ctx, {
        responsive: true,
        type: 'pie',

        data: {
            labels: [
                'Abiertas',
                'Cerradas',
                'Indice de entregas',
                'Indice de revisi√≥n',
                'Indice de buenas entregas'
            ],

            datasets: [{
                data: [
                    20,15,12,26,31
                ],
                backgroundColor: [
                    'rgba(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgba(255, 99, 132)',
                    'rgba(54, 162, 235)',
                    'rgb(75, 192, 192)'
                ],
                
                pointBackgroundColor: 'rgb(75, 192, 192)',
                pointBorderColor: '255, 159, 64',
                pointHoverBackgroundColor: '255, 159, 64',
                pointHoverBorderColor: 'rgb(75, 192, 192)'
            }]
    },
    options: {
    }
    });
</script>
{{/if}}
{{#if graficasPonente}}
<script>
    var ctx = document.getElementById('GraficaMuestra4');
    var GraficaMuestra4 = new Chart(ctx, {
        responsive: true,
        type: 'bar',
        data : {
                labels:['Alumnos','Cursos'],
                datasets: [{
                label: 'Actuales',
                data: [
                {{#each datosGeneralesPonente}}
                        {{alumnosActuales}},
                {{/each}}
                {{#each datosGeneralesPonente}}
                        {{cursosActuales}},
                {{/each}}
                ],
                backgroundColor: [
                'rgba(255, 99, 132, 0.9)',
                'rgba(255, 159, 64, 0.9)'
                ],
                borderColor: [
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)'
                ]
            }]
            },
            options: {
            }
        });
</script>
{{/if}}
{{#if graficasPonente}}
<script>
    var ctx = document.getElementById('GraficaMuestra7');
    var GraficaMuestra7 = new Chart(ctx, {
        responsive: true,
        type: 'doughnut',
        data : {
            label: 'Alcanzados/Impartidos',
                labels:['Alumnos Alcanzados','Cursos Impartidos'],
                datasets: [{
                data: [
                {{#each datosGeneralesPonente}}
                        {{alumnosAlcanzados}},
                {{/each}}
                {{#each datosGeneralesPonente}}
                        {{cursosImpartidos}},
                {{/each}}
                ],
                backgroundColor: [
                'rgba(153, 102, 255, 0.9)',
                'rgba(54, 162, 235, 0.9)'
                ],
                borderColor: [
                'rgba(153, 102, 255)',
                'rgba(54, 162, 235)'
                ],
                borderWidth: 1
            }]
            },
            options: {
                scales: {
                y: {
                    beginAtZero: true
                }
                }
            }
        });
</script>
{{/if}}
{{#if graficasAdministrador}}
<script>
    var ctx = document.getElementById('GraficaMuestra6');
    var GraficaMuestra6 = new Chart(ctx, {
        responsive: true,
        type: 'doughnut',

        data: {
            labels: [
                'Disponibles',
                'Aprobados',
                'Reprobados'
            ],

            datasets: [{
                label: 'Datos Cursos',
                data: [
                        {{totalCurso}},
                        {{totalCursoAprobado}},
                        {{totalCursoReprobado}},
                ],
                backgroundColor: [
                    'rgba(116, 96, 238)',
                    'rgba(75, 192, 192)',
                    'rgba(255, 159, 64, 0.9)'
                ],
                pointBackgroundColor: 'rgb(75, 192, 192)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(75, 192, 192)'
            }]
    },
    options: {
    }
    });
</script>
{{/if}}
{{#if dataTablesExport}}
<script src="../../assets/extra-libs/DataTables/datatables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.print.min.js"></script>
<script src="../../dist/js/pages/datatable/datatable-advanced.init.js"></script>
{{/if}}
{{#if pickadate}}
<script src="../../assets/libs/pickadate/lib/compressed/legacy.js"></script>
<script src="../../assets/libs/pickadate/lib/compressed/picker.time.js"></script>
<script src="../../assets/libs/pickadate/lib/compressed/picker.date.js"></script>
<script src="../../assets/libs/pickadate/lib/compressed/picker.js"></script>
<script src="../../assets/libs/moment/moment.js"></script>
<script src="../../assets/libs/daterangepicker/daterangepicker.js"></script>
<script src="../../dist/js/pages/forms/datetimepicker/datetimepicker.init.js"></script>
{{/if}}
{{#if select2}}
<script src="../../assets/libs/select2/dist/js/select2.full.min.js"></script>
<script src="../../assets/libs/select2/dist/js/select2.min.js"></script>
<script src="../../dist/js/pages/forms/select2/select2.init.js"></script>
{{/if}}
{{#if prism}}
<script src="../../assets/extra-libs/prism/prism.js"></script>
{{/if}}

{{#if chartist}}
<script src="../../assets/libs/chartist/dist/chartist.min.js"></script>
<script src="../../assets/libs/chartist-plugin-tooltips/dist/chartist-plugin-tooltip.min.js"></script>
{{/if}}

{{#if c3}}
<script src="../../assets/extra-libs/c3/d3.min.js"></script>
<script src="../../assets/extra-libs/c3/c3.min.js"></script>
<script src="../../assets/libs/chart.js/dist/Chart.min.js"></script>
<script src="../../dist/js/pages/dashboards/dashboard7.js"></script>
{{/if}}

{{#if dropzone}}
<script src="../../assets/libs/dropzone/dist/min/dropzone.min.js"></script>
{{/if}}


{{#if switch}}
<script src="../../assets/libs/bootstrap-switch/dist/js/bootstrap-switch.min.js"></script>
<script>
    $(".bt-switch input[type='checkbox'], .bt-switch input[type='radio']").bootstrapSwitch();
    var radioswitch = function () {
        var bt = function () {
            $(".radio-switch").on("switch-change", function () {
                $(".radio-switch").bootstrapSwitch("toggleRadioState")
            }), $(".radio-switch").on("switch-change", function () {
                $(".radio-switch").bootstrapSwitch("toggleRadioStateAllowUncheck")
            }), $(".radio-switch").on("switch-change", function () {
                $(".radio-switch").bootstrapSwitch("toggleRadioStateAllowUncheck", !1)
            })
        };
        return {
            init: function () {
                bt()
            }
        }
    }();
    $(document).ready(function () {
        radioswitch.init()
    });
</script>
{{/if}}

{{#if dataTables}}
<script src="../../assets/extra-libs/DataTables/datatables.min.js"></script>
<script src="../../dist/js/pages/datatable/datatable-basic.init.js"></script>
{{/if}} 

{{#if general}}
<script src="../../assets/libs/jquery-steps/build/jquery.steps.min.js"></script>
<script src="../../assets/libs/jquery-validation/dist/jquery.validate.min.js"></script>
<script>
            //Basic Example
            $("#example-basic").steps({
                headerTag: "h3",
                bodyTag: "section",
                transitionEffect: "slideLeft",
                autoFocus: true
            });

            // Basic Example with form
            var form = $("#example-form");
            form.validate({
                errorPlacement: function errorPlacement(error, element) { element.before(error); },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });
            form.children("div").steps({
                headerTag: "h3",
                bodyTag: "section",
                transitionEffect: "slideLeft",
                onStepChanging: function (event, currentIndex, newIndex) {
                    form.validate().settings.ignore = ":disabled,:hidden";
                    return form.valid();
                },
                onFinishing: function (event, currentIndex) {
                    form.validate().settings.ignore = ":disabled";
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    alert("Submitted!");
                }
            });

            // Advance Example

            var form = $("#example-advanced-form").show();

            form.steps({
                headerTag: "h3",
                bodyTag: "fieldset",
                transitionEffect: "slideLeft",
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Allways allow previous action even if the current form is not valid!
                    if (currentIndex > newIndex) {
                        return true;
                    }
                    // Forbid next action on "Warning" step if the user is to young
                    if (newIndex === 3 && Number($("#age-2").val()) < 18) {
                        return false;
                    }
                    // Needed in some cases if the user went back (clean up)
                    if (currentIndex < newIndex) {
                        // To remove error styles
                        form.find(".body:eq(" + newIndex + ") label.error").remove();
                        form.find(".body:eq(" + newIndex + ") .error").removeClass("error");
                    }
                    form.validate().settings.ignore = ":disabled,:hidden";
                    return form.valid();
                },
                onStepChanged: function (event, currentIndex, priorIndex) {
                    // Used to skip the "Warning" step if the user is old enough.
                    if (currentIndex === 2 && Number($("#age-2").val()) >= 18) {
                        form.steps("siguiente");
                    }
                    // Used to skip the "Warning" step if the user is old enough and wants to the previous step.
                    if (currentIndex === 2 && priorIndex === 3) {
                        form.steps("anterior");
                    }
                },
                onFinishing: function (event, currentIndex) {
                    form.validate().settings.ignore = ":disabled";
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    alert("Submitted!");
                }
            }).validate({
                errorPlacement: function errorPlacement(error, element) { element.before(error); },
                rules: {
                    confirm: {
                        equalTo: "#password-2"
                    }
                }
            });

            // Dynamic Manipulation
            $("#example-manipulation").steps({
                headerTag: "h3",
                bodyTag: "section",
                enableAllSteps: true,
                enablePagination: false
            });

            //Vertical Steps

            $("#example-vertical").steps({
                headerTag: "h3",
                bodyTag: "section",
                transitionEffect: "slideLeft",
                stepsOrientation: "vertical"
            });

            //Custom design form example
            $(".tab-wizard").steps({
                headerTag: "h6",
                bodyTag: "section",
                transitionEffect: "fade",
                titleTemplate: '<span class="step">#index#</span> #title#',
                labels: {
                    finish: "Submit"
                },
                onFinished: function (event, currentIndex) {
                    swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");

                }
            });


            var form = $(".validation-wizard").show();

            $(".validation-wizard").steps({
                headerTag: "h6",
                bodyTag: "section",
                transitionEffect: "fade",
                titleTemplate: '<span class="step">#index#</span> #title#',
                labels: {
                    finish: "Enviar"
                },
                onStepChanging: function (event, currentIndex, newIndex) {
                    return currentIndex > newIndex || !(3 === newIndex && Number($("#age-2").val()) < 18) && (currentIndex < newIndex && (form.find(".body:eq(" + newIndex + ") label.error").remove(), form.find(".body:eq(" + newIndex + ") .error").removeClass("error")), form.validate().settings.ignore = ":disabled,:hidden", form.valid())
                },
                onFinishing: function (event, currentIndex) {
                    return form.validate().settings.ignore = ":disabled", form.submit()
                },
                onFinished: function (event, currentIndex) {
                    swal("Form Submitted!", "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lorem erat eleifend ex semper, lobortis purus sed.");
                }
            }), $(".validation-wizard").validate({
                ignore: "input[type=hidden]",
                errorClass: "text-danger",
                successClass: "text-info",
                highlight: function (element, errorClass) {
                    $(element).removeClass(errorClass)
                },
                unhighlight: function (element, errorClass) {
                    $(element).removeClass(errorClass)
                },
                errorPlacement: function (error, element) {
                    error.insertAfter(element)
                },
                rules: {
                    email: {
                        email: !0
                    }
                }
            })
</script>
{{/if}}